
# coding: utf-8

# In[1]:

from nltk.corpus import wordnet


# In[2]:

syns = wordnet.synsets("program")


# In[3]:

print(syns[0].name())


# In[4]:

print(syns[0].lemmas()[0].name())


# In[5]:

print(syns[0].examples())


# In[6]:

synonyms = []
antonyms = []

for syn in wordnet.synsets("good"):
    for l in syn.lemmas():
        synonyms.append(l.name())
        if l.antonyms():
            antonyms.append(l.antonyms()[0].name())
            
print(set(synonyms))
print (set(antonyms))


# In[7]:

w1 = wordnet.synset('ship.n.01')
w2 = wordnet.synset('boat.n.01')
print(w1.wup_similarity(w2))


# In[8]:

w1 = wordnet.synset('ship.n.01')
w2 = wordnet.synset('cat.n.01')
print(w1.wup_similarity(w2))


# In[9]:

import nltk
import random
from nltk.corpus import movie_reviews


# In[10]:

documents = [(list(movie_reviews.words(fileid)), category)
            for category in movie_reviews.categories()
            for fileid in movie_reviews.fileids(category)]

random.shuffle(documents)


# In[11]:

all_words = []
for w in movie_reviews.words():
    all_words.append(w.lower())
all_words = nltk.FreqDist(all_words)
print(all_words.most_common(15))


# In[12]:

print(all_words["stupid"])


# In[12]:

from nltk.corpus import wordnet as wn


# In[13]:

tree = wn.synsets('tree','n')[0]


# In[14]:

flower=wn.synsets('flower','n')[0]


# In[15]:

wn.path_similarity(tree,flower)


# In[16]:

dog = wn.synsets('dog','n')[0]
cat = wn.synsets('cat','n')[0]


# In[17]:

wn.path_similarity(dog,cat)


# In[21]:

causes = wn.synsets('causes','n')[0]
entailments = wn.synsets('entailments','n')[0]
wn.path_similarity(causes,entailments)


# In[26]:

from nltk.corpus import sentiwordnet as swn


# In[27]:

swn.fileids()


# In[29]:

print(swn.senti_synset('breakdown.n.03'))


# In[30]:

list(swn.senti_synsets('slow'))


# In[31]:

happy = swn.senti_synsets('happy','a')


# In[33]:

happy0 = list(happy)[0]


# In[34]:

happy0.pos_score()


# In[35]:

happy0.neg_score()


# In[36]:

happy0.obj_score()


# most probably going to use sentiwordnet to train neural network



